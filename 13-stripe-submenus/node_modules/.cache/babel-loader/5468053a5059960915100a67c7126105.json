{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/GitHub/react-projects/13-stripe-submenus/src/context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data';\nconst AppContext = React.createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(true);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = () => {\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = () => {\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSubmenuOpen,\n      isSidebarOpen,\n      openSubmenu,\n      openSidebar,\n      closeSubmenu,\n      closeSidebar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, children);\n};\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};","map":{"version":3,"sources":["/home/manu/Documents/GitHub/react-projects/13-stripe-submenus/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","openSidebar","closeSidebar","openSubmenu","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACvC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAM;AACvBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMK,WAAW,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAM;AACvBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,sBAAO,oBAAC,UAAD,CAAY,QAAZ;AACK,IAAA,KAAK,EAAE;AAAED,MAAAA,aAAF;AACCF,MAAAA,aADD;AAECM,MAAAA,WAFD;AAGCF,MAAAA,WAHD;AAICG,MAAAA,YAJD;AAKCF,MAAAA;AALD,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQMN,QARN,CAAP;AAUH,CA3BM;AA8BP,OAAO,MAAMS,gBAAgB,GAAG,MAAM;AAClC,SAAOd,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM","sourcesContent":["import React, { useState, useContext } from 'react'\nimport sublinks from './data'\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = ({children}) => {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false)\n    const [isSubmenuOpen, setIsSubmenuOpen] = useState(true)\n\n    const openSidebar = () => {\n        setIsSidebarOpen(true)\n    }\n    const closeSidebar = () => {\n        setIsSidebarOpen(false)\n    }\n    const openSubmenu = () => {\n        setIsSubmenuOpen(true)\n    }\n    const closeSubmenu = () => {\n        setIsSubmenuOpen(false)\n    }\n    \n    return <AppContext.Provider \n                value={{ isSubmenuOpen, \n                        isSidebarOpen, \n                        openSubmenu, \n                        openSidebar, \n                        closeSubmenu, \n                        closeSidebar }}\n            >\n                {children}\n            </AppContext.Provider>\n}\n\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n}"]},"metadata":{},"sourceType":"module"}