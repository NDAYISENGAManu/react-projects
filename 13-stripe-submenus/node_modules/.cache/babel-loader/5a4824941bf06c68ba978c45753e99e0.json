{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/GitHub/react-projects/13-stripe-submenus/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location,\n    page: {\n      page,\n      links\n    }\n  } = useGlobalContext();\n  const container = useRef(null);\n  useEffect(() => {\n    const submenu = container.current;\n    const {\n      center,\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }\n  }, page), /*#__PURE__*/React.createElement(\"div\", {\n    className: `submenu-center col-2`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  }, links.map((link, index) => {\n    const {\n      label,\n      icon,\n      url\n    } = link;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: index,\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, icon, label);\n  })));\n};\n\nexport default Submenu;","map":{"version":3,"sources":["/home/manu/Documents/GitHub/react-projects/13-stripe-submenus/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","page","links","container","submenu","current","center","bottom","style","left","top","map","link","index","label","icon","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,IAAI,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAjC,MAAsDL,gBAAgB,EAA5E;AACA,QAAMM,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMQ,OAAO,GAAGD,SAAS,CAACE,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBP,QAA3B;AACAI,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B;AACD,GALQ,EAKN,CAACP,QAAD,CALM,CAAT;AAOA,sBACE;AACE,IAAA,SAAS,EAAG,GAAED,aAAa,GAAG,cAAH,GAAoB,SAAU,EAD3D;AAEE,IAAA,GAAG,EAAEI,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,CAJD,eAKC;AAAK,IAAA,SAAS,EAAG,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACvB,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA,IAAP;AAAYC,MAAAA;AAAZ,QAAmBJ,IAAzB;AACA,wBACE;AAAG,MAAA,GAAG,EAAEC,KAAR;AAAe,MAAA,IAAI,EAAEG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,EAEGD,KAFH,CADF;AAMD,GARA,CADF,CALD,CADF;AAmBD,CA9BD;;AAgCA,eAAehB,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context'\n\nconst Submenu = () => {\n  const { isSubmenuOpen, location, page: { page, links }, } = useGlobalContext()\n  const container = useRef(null)\n\n  useEffect(()=>{\n    const submenu = container.current\n    const { center, bottom } = location\n    submenu.style.left = `${center}px`\n    submenu.style.top = `${bottom}px`\n  }, [location]);\n\n  return (\n    <aside \n      className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`} \n      ref={container} \n    >\n     <h4>{page}</h4>\n     <div className={`submenu-center col-2`}>\n      {links.map((link,index)=>{\n        const {label,icon,url} = link\n        return (\n          <a key={index} href={url}>\n            {icon}\n            {label}\n          </a>\n        )\n      })}\n     </div>\n    </aside>\n  )\n}\n\nexport default Submenu\n"]},"metadata":{},"sourceType":"module"}